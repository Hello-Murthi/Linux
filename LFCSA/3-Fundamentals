
grep       -i         string
[Command]  [Options]  [Args]

----

Files & Directory Permissions:

chmod g-w FILE - removes write Permissions for group user in this file


Permission to a file and directory can also be assigned numerically
• chmod ugo+r FILE
OR
• chmod 444 FILE

chmod a-w FILE - removes Write permission for All (3) users

If you don't have X (executable) permission on a Directory, you won't be able to go inside that Dir
----

File ownership (chown, chgrp)

    - Need to be in root user to change

chown:
    - ex: chown root FILE - changed owner to root for FILE

chgrp:
    - ex: chgrp root FILE - changed Group to root for FILE

----
Current User - Murthi (has all 3 permissions on abc directory) and there is a FILE in abc directory which has user and group both as root, now being in Murthi user, if you delete this FILE, it will still delete bcz Murthi (has all 3 permissions on same abc directory)
----

tee - to print and write output both at same time
tee -a to append existing FILE

----

There are 2 owners of a file or directory
• User and group

----

There are 3 types of help commands
•whatis command
•command –-help
•man command

----
Input and Output Redirects
• There are 3 redirects in Linux
1. Standard input (stdin) and it has file descriptor number as 0
2. Standard output (stdout) and it has file descriptor number as 1
3. Standard error (stderr) and it has file descriptor number as 2


• Output (stdout) - 1
• By default when running a command its output goes to the terminal
• The output of a command can be routed to a file using > symbol
    • E.g. ls -l > listings
            pwd > findpath

• If using the same file for additional output or to append to the same file then use >>
    • E.g. ls –la >> listings
            echo “Hello World” >> findpath.


• Input (stdin) - 0
• Input is used when feeding file contents to a file
    • E.g. cat < listings
            mail –s “Office memo” allusers@abc.com < memoletter


• Error (stderr) - 2
• When a command is executed we use a keyboard and that is also considered (stdin -0)
• That command output goes on the monitor and that output is (stdout – 1)
• If the command produced any error on the screen then it is considered (stderr – 2)
    • We can use redirects to route errors from the screen
        • E.g ls –l /root 2> errorfile
                telnet localhost 2> errorfile.

----

File Maintenance Commands
• cp
• rm
• mv
• mkdir
• rmdir or rm -r
• chgrp
• chown

----

File Display Commands
•cat
•more
•less
•head
•tail

----

Filters / Text Processors Commands
• cut
• awk
• grep and egrep
• sort
• uniq
• wc
----

cut
• cut is a command line utility that allows you to cut parts of lines from specified files or piped data and
print the result to standard output. It can be used to cut parts of a line by delimiter, byte position, and
character
• cut filename = Does not work
• cut --version = Check version
• cut –c1 filename = List one character
• cut –c1,2,4 = Pick and chose character
• cut –c1-3 filename = List range of characters
• cut –c1-3,6-8 filename = List specific range of characters
• cut –b1-3 filename = List by byte size
• cut -d: -f 6 /etc/passwd = List first 6th column separated by :
• cut -d: -f 6-7 /etc/passwd = List first 6 and 7th column separated by :
• ls –l | cut –c2-4 = Only print user permissions of files/dir

--

awk
• awk is a utility/language designed for data extraction. Most of the time it is used to extract fields from a
file or from an output
• awk --version = Check version
• awk ‘{print $1}’ file = List 1st field from a file
• ls –l | awk ‘{print $1,$3}’ = List 1 and 3rd field of ls –l output
• ls –l | awk ‘{print $NF}’ = Last field of the output
• awk '/Jerry/ {print}' file = Search for a specific word
• awk -F: '{print $1}' /etc/passwd = Ouput only 1st field of /etc/passwd
• echo "Hello Tom" | awk '{$2="Adam"; print $0}‘ = Replace words field words
• cat file | awk '{$2=“Imran"; print $0}‘ = Replace words field words
• awk 'length($0) > 15‘ file = Get lines that have more than 15 byte size
• ls -l | awk '{if($9 == "seinfeld") print $0;}‘ = Get the field matching seinfeld in /home/iafzal
• ls -l | awk '{print NF}‘ = Number of fields.
--

 What is grep?
• The grep command which stands for “global regular expression print,” processes text line by line
and prints any lines which match a specified pattern
• grep –-version OR grep --help = Check version or help
• grep keyword file = Search for a keyword from a file
• grep –c keyword file = Search for a keyword and count
• grep –i KEYword file = Search for a keyword ignore case-sensitive
• grep –n keyword file = Display the matched lines and their line numbers
• grep –v keyword file = Display everything but keyword
• grep keyword file | awk ‘{print $1}’ = Search for a keyword and then only give the 1st field
• ls –l | grep Desktop = Search for a keyword and then only give the 1st field
• egrep –i “keyword|keyword2” file = Search for 2 keywords

--

sort/uniq:

What are sort and uniq commands?
• Sort command sorts in alphabetical order
• Uniq command filters out the repeated or duplicate lines
• sort –-version OR sort --help = Check version or help
• sort file = Sorts file in alphabetical order
• sort –r file = Sort in reverse alphabetical order
• sort –k2 file = Sort by field number
• uniq file = Removes duplicates
• sort file | uniq = Always sort first before using uniq their line numbers
• sort file | uniq –c = Sort first then uniq and list count
• sort file | uniq –d = Only show repeated lines.

--

wc:

What is wc command?
• The command reads either standard input or a list of files and generates: newline count, word
count, and byte count
• wc –-version OR wc --help = Check version or help
• wc file = Check file line count, word count and byte count
• wc –l file = Get the number of lines in a file
• wc –w file = Get the number of words in a file
• wc –c file = Get the number of bytes in a file
• wc DIRECTORY = NOT allowed
• ls –l | wc -l = Number of files
• grep keyword | wc -l = Number of keyword lines.

--

Compare Files
• diff (Line by line)
• cmp (Byte by byte)

--

Compress and un-Compress Files
• tar
• gzip
• gzip –d OR gunzip

--

Truncate File Size (truncate)
• The Linux truncate command is often used to shrink or extend the size of a file to the specified size
• Command
    • truncate –s 10 filename

--

Combining and Splitting Files
• Multiple files can be combined into one and
• One file can be split into multiple files
    • cat file1 file2 file3 > file4
    • split file4
    • e.g. split –l 300 file.txt childfile

Split file.txt into 300 lines per file and output to childfileaa,
childfileab and childfileac

--

who - shows who is on the system
    who
    who am i

finger - displays information about users, by name or login name
    finger doe
    finger userid

--

Finding System Information:

uname –a - Sometimes it is required to quickly determine details like kernel name, version, hostname, etc of the Linux box you are using.

cat /etc/redhat-release - This file provides information about your system distribution and its version

dmidecode:
dmidecode is a tool for dumping a computer's DMI (some say SMBIOS) table contents in a humanreadable format. This table contains a description of the system's hardware components, as well as other useful pieces of information such as serial numbers and BIOS revision

---


Access Control Lists(ACL) in Linux
What is ACL ?
Access control list (ACL) provides an additional, more flexible permission mechanism for file systems. It
is designed to assist with UNIX file permissions. ACL allows you to give permissions for any user or
group to any disc resource
Use of ACL :
Think of a scenario in which a particular user is not a member of group created by you but still you
want to give some read or write access, how can you do it without making user a member of group,
here comes in picture Access Control Lists, ACL helps us to do this trick.
Basically, ACLs are used to make a flexible permission mechanism in Linux.
setfacl and getfacl are used for setting up ACL and showing ACL respectively.
For example :
getfacl test/seinfeld.txt
Output:
# file: test/seinfeld.txt
# owner: iafzal
# group: iafzal
user::rwgroup::rwother::r--

List of commands for setting up ACL :
1) To add permission for a user
setfacl -m "u:user:permissions" /path/to/file
2) To add permissions for a group
setfacl -m "g:group:permissions" /path/to/file
3) To allow all files or directories to inherit ACL entries from the directory it is within
setfacl -dm "entry" /path/to/dir
4) To remove a specific entry
setfacl -x "entry" /path/to/file
5) To remove all entries
setfacl -b path/to/file

For example :
setfacl -m u:iafzal:rwx test/seinfeld.txt

Modifying ACL using setfacl :
To add permissions for a user (user is either the user name or ID):
# setfacl -m "u:user:permissions"
To add permissions for a group (group is either the group name or ID):
# setfacl -m "g:group:permissions"
To allow all files or directories to inherit ACL entries from the directory it is within:
# setfacl -dm "entry"
Example :
setfacl -m u:iafzal:r-x test/seinfeld.txt
setfacl and getfacl

View ACL :
To show permissions :
# getfacl filename
Observe the difference between output of getfacl command before and after setting up ACL permissions
using setfacl command.
Remove ACL :
If you want to remove the set ACL permissions, use setfacl command with -b option.
For example :

----

